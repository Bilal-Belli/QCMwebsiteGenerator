/*
 * generated by Xtext 2.37.0
 */
grammar InternalQcmDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.example.qcm.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.example.qcm.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.example.qcm.dsl.services.QcmDslGrammarAccess;

}

@parser::members {

 	private QcmDslGrammarAccess grammarAccess;

    public InternalQcmDslParser(TokenStream input, QcmDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Questionnaire";
   	}

   	@Override
   	protected QcmDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQuestionnaire
entryRuleQuestionnaire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionnaireRule()); }
	iv_ruleQuestionnaire=ruleQuestionnaire
	{ $current=$iv_ruleQuestionnaire.current; }
	EOF;

// Rule Questionnaire
ruleQuestionnaire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='questionnaire'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuestionnaireAccess().getQuestionnaireKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQuestionnaireAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionnaireRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getQuestionnaireAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='melange'
			{
				newLeafNode(otherlv_3, grammarAccess.getQuestionnaireAccess().getMelangeKeyword_3_0());
			}
			otherlv_4='='
			{
				newLeafNode(otherlv_4, grammarAccess.getQuestionnaireAccess().getEqualsSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionnaireAccess().getMelangeBOOLEANParserRuleCall_3_2_0());
					}
					lv_melange_5_0=ruleBOOLEAN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
						}
						set(
							$current,
							"melange",
							lv_melange_5_0,
							"org.example.qcm.dsl.QcmDsl.BOOLEAN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionnaireAccess().getQuestionsQuestionParserRuleCall_4_0());
				}
				lv_questions_6_0=ruleQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionnaireRule());
					}
					add(
						$current,
						"questions",
						lv_questions_6_0,
						"org.example.qcm.dsl.QcmDsl.Question");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getQuestionnaireAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current; }
	EOF;

// Rule Question
ruleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='question'
		{
			newLeafNode(otherlv_0, grammarAccess.getQuestionAccess().getQuestionKeyword_0());
		}
		(
			(
				lv_texte_1_0=RULE_STRING
				{
					newLeafNode(lv_texte_1_0, grammarAccess.getQuestionAccess().getTexteSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"texte",
						lv_texte_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getQuestionAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getQuestionAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getQuestionAccess().getEqualsSignKeyword_4());
		}
		(
			(
				(
					lv_type_5_1='SIMPLE'
					{
						newLeafNode(lv_type_5_1, grammarAccess.getQuestionAccess().getTypeSIMPLEKeyword_5_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuestionRule());
						}
						setWithLastConsumed($current, "type", lv_type_5_1, null);
					}
					    |
					lv_type_5_2='MULTIPLE'
					{
						newLeafNode(lv_type_5_2, grammarAccess.getQuestionAccess().getTypeMULTIPLEKeyword_5_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQuestionRule());
						}
						setWithLastConsumed($current, "type", lv_type_5_2, null);
					}
				)
			)
		)
		otherlv_6='difficulte'
		{
			newLeafNode(otherlv_6, grammarAccess.getQuestionAccess().getDifficulteKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getQuestionAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_difficulte_8_0=RULE_INT
				{
					newLeafNode(lv_difficulte_8_0, grammarAccess.getQuestionAccess().getDifficulteINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"difficulte",
						lv_difficulte_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionAccess().getPropositionsPropositionParserRuleCall_9_0());
				}
				lv_propositions_9_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionRule());
					}
					add(
						$current,
						"propositions",
						lv_propositions_9_0,
						"org.example.qcm.dsl.QcmDsl.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			otherlv_10='etiquettes'
			{
				newLeafNode(otherlv_10, grammarAccess.getQuestionAccess().getEtiquettesKeyword_10_0());
			}
			otherlv_11='='
			{
				newLeafNode(otherlv_11, grammarAccess.getQuestionAccess().getEqualsSignKeyword_10_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestionAccess().getEtiquettesEtiquetteParserRuleCall_10_2_0());
					}
					lv_etiquettes_12_0=ruleEtiquette
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestionRule());
						}
						add(
							$current,
							"etiquettes",
							lv_etiquettes_12_0,
							"org.example.qcm.dsl.QcmDsl.Etiquette");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getQuestionAccess().getCommaKeyword_10_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQuestionAccess().getEtiquettesEtiquetteParserRuleCall_10_3_1_0());
						}
						lv_etiquettes_14_0=ruleEtiquette
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQuestionRule());
							}
							add(
								$current,
								"etiquettes",
								lv_etiquettes_14_0,
								"org.example.qcm.dsl.QcmDsl.Etiquette");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getQuestionAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleProposition
entryRuleProposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropositionRule()); }
	iv_ruleProposition=ruleProposition
	{ $current=$iv_ruleProposition.current; }
	EOF;

// Rule Proposition
ruleProposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_texte_0_0=RULE_STRING
				{
					newLeafNode(lv_texte_0_0, grammarAccess.getPropositionAccess().getTexteSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPropositionRule());
					}
					setWithLastConsumed(
						$current,
						"texte",
						lv_texte_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_1='correcte'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropositionAccess().getCorrecteKeyword_1_0());
			}
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getPropositionAccess().getEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPropositionAccess().getEstCorrecteBOOLEANParserRuleCall_1_2_0());
					}
					lv_estCorrecte_3_0=ruleBOOLEAN
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropositionRule());
						}
						set(
							$current,
							"estCorrecte",
							lv_estCorrecte_3_0,
							"org.example.qcm.dsl.QcmDsl.BOOLEAN");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEtiquette
entryRuleEtiquette returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEtiquetteRule()); }
	iv_ruleEtiquette=ruleEtiquette
	{ $current=$iv_ruleEtiquette.current; }
	EOF;

// Rule Etiquette
ruleEtiquette returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_nom_0_0=RULE_ID
			{
				newLeafNode(lv_nom_0_0, grammarAccess.getEtiquetteAccess().getNomIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEtiquetteRule());
				}
				setWithLastConsumed(
					$current,
					"nom",
					lv_nom_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBOOLEANRule()); }
	iv_ruleBOOLEAN=ruleBOOLEAN
	{ $current=$iv_ruleBOOLEAN.current.getText(); }
	EOF;

// Rule BOOLEAN
ruleBOOLEAN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBOOLEANAccess().getFalseKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
