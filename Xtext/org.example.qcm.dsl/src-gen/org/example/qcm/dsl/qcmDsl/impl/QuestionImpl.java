/**
 * generated by Xtext 2.37.0
 */
package org.example.qcm.dsl.qcmDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.example.qcm.dsl.qcmDsl.Etiquette;
import org.example.qcm.dsl.qcmDsl.Proposition;
import org.example.qcm.dsl.qcmDsl.QcmDslPackage;
import org.example.qcm.dsl.qcmDsl.Question;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Question</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.example.qcm.dsl.qcmDsl.impl.QuestionImpl#getTexte <em>Texte</em>}</li>
 *   <li>{@link org.example.qcm.dsl.qcmDsl.impl.QuestionImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.example.qcm.dsl.qcmDsl.impl.QuestionImpl#getDifficulte <em>Difficulte</em>}</li>
 *   <li>{@link org.example.qcm.dsl.qcmDsl.impl.QuestionImpl#getPropositions <em>Propositions</em>}</li>
 *   <li>{@link org.example.qcm.dsl.qcmDsl.impl.QuestionImpl#getEtiquettes <em>Etiquettes</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QuestionImpl extends MinimalEObjectImpl.Container implements Question
{
  /**
   * The default value of the '{@link #getTexte() <em>Texte</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTexte()
   * @generated
   * @ordered
   */
  protected static final String TEXTE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTexte() <em>Texte</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTexte()
   * @generated
   * @ordered
   */
  protected String texte = TEXTE_EDEFAULT;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getDifficulte() <em>Difficulte</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDifficulte()
   * @generated
   * @ordered
   */
  protected static final int DIFFICULTE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getDifficulte() <em>Difficulte</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDifficulte()
   * @generated
   * @ordered
   */
  protected int difficulte = DIFFICULTE_EDEFAULT;

  /**
   * The cached value of the '{@link #getPropositions() <em>Propositions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPropositions()
   * @generated
   * @ordered
   */
  protected EList<Proposition> propositions;

  /**
   * The cached value of the '{@link #getEtiquettes() <em>Etiquettes</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEtiquettes()
   * @generated
   * @ordered
   */
  protected EList<Etiquette> etiquettes;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QuestionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QcmDslPackage.Literals.QUESTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTexte()
  {
    return texte;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTexte(String newTexte)
  {
    String oldTexte = texte;
    texte = newTexte;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QcmDslPackage.QUESTION__TEXTE, oldTexte, texte));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QcmDslPackage.QUESTION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getDifficulte()
  {
    return difficulte;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDifficulte(int newDifficulte)
  {
    int oldDifficulte = difficulte;
    difficulte = newDifficulte;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QcmDslPackage.QUESTION__DIFFICULTE, oldDifficulte, difficulte));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Proposition> getPropositions()
  {
    if (propositions == null)
    {
      propositions = new EObjectContainmentEList<Proposition>(Proposition.class, this, QcmDslPackage.QUESTION__PROPOSITIONS);
    }
    return propositions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Etiquette> getEtiquettes()
  {
    if (etiquettes == null)
    {
      etiquettes = new EObjectContainmentEList<Etiquette>(Etiquette.class, this, QcmDslPackage.QUESTION__ETIQUETTES);
    }
    return etiquettes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QcmDslPackage.QUESTION__PROPOSITIONS:
        return ((InternalEList<?>)getPropositions()).basicRemove(otherEnd, msgs);
      case QcmDslPackage.QUESTION__ETIQUETTES:
        return ((InternalEList<?>)getEtiquettes()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QcmDslPackage.QUESTION__TEXTE:
        return getTexte();
      case QcmDslPackage.QUESTION__TYPE:
        return getType();
      case QcmDslPackage.QUESTION__DIFFICULTE:
        return getDifficulte();
      case QcmDslPackage.QUESTION__PROPOSITIONS:
        return getPropositions();
      case QcmDslPackage.QUESTION__ETIQUETTES:
        return getEtiquettes();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QcmDslPackage.QUESTION__TEXTE:
        setTexte((String)newValue);
        return;
      case QcmDslPackage.QUESTION__TYPE:
        setType((String)newValue);
        return;
      case QcmDslPackage.QUESTION__DIFFICULTE:
        setDifficulte((Integer)newValue);
        return;
      case QcmDslPackage.QUESTION__PROPOSITIONS:
        getPropositions().clear();
        getPropositions().addAll((Collection<? extends Proposition>)newValue);
        return;
      case QcmDslPackage.QUESTION__ETIQUETTES:
        getEtiquettes().clear();
        getEtiquettes().addAll((Collection<? extends Etiquette>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QcmDslPackage.QUESTION__TEXTE:
        setTexte(TEXTE_EDEFAULT);
        return;
      case QcmDslPackage.QUESTION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case QcmDslPackage.QUESTION__DIFFICULTE:
        setDifficulte(DIFFICULTE_EDEFAULT);
        return;
      case QcmDslPackage.QUESTION__PROPOSITIONS:
        getPropositions().clear();
        return;
      case QcmDslPackage.QUESTION__ETIQUETTES:
        getEtiquettes().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QcmDslPackage.QUESTION__TEXTE:
        return TEXTE_EDEFAULT == null ? texte != null : !TEXTE_EDEFAULT.equals(texte);
      case QcmDslPackage.QUESTION__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case QcmDslPackage.QUESTION__DIFFICULTE:
        return difficulte != DIFFICULTE_EDEFAULT;
      case QcmDslPackage.QUESTION__PROPOSITIONS:
        return propositions != null && !propositions.isEmpty();
      case QcmDslPackage.QUESTION__ETIQUETTES:
        return etiquettes != null && !etiquettes.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (texte: ");
    result.append(texte);
    result.append(", type: ");
    result.append(type);
    result.append(", difficulte: ");
    result.append(difficulte);
    result.append(')');
    return result.toString();
  }

} //QuestionImpl
